package nonverblaster {	import flash.display.*;	import flash.events.*;	import gs.TweenLite;	import gs.easing.*;		public class BufferWheel extends MovieClip{		var i:uint;		var bufferBar:BufferBar1;		var distance:uint = 10;		var amount:Number = 360 / distance;		var bars:Array = new Array();		var fadeSpeed:Number = .03;		var counter:Number = 0;		var isOn:Boolean = true;		public function BufferWheel(){			alpha = 0;			mouseEnabled = false;			create();			chk.visible = false;			addEventListener(Event.ENTER_FRAME, loop);		}		public function setTint(){			for(i=0; i<bars.length; i++){				var b = bars[i] as BufferBar1;				Colorizer.colorize(b, Glo.bal.controlColour);			}		}		private function create(){			for(i=0; i<amount; i++){				bufferBar = new BufferBar1();				this.addChild(bufferBar);				bufferBar.rotation = distance * i;				bufferBar.klotz.rotation = -bufferBar.rotation;				bars.push(bufferBar);				bufferBar.alpha = 0;			}		}						private function loop(e:Event){			animate();			fit();		}		private function fit(){			x = Math.floor(stage.stageWidth / 2);			y = Math.floor(stage.stageHeight / 2);		}		public function fadeIn(){			TweenLite.to(this, 1, {alpha:1});		}		public function fadeOut(){			TweenLite.to(this, 1, {alpha:0});		}		private function animate(){			if(counter < bars.length){				counter += 1;			} else {				counter = 0;			}			for(i=0; i<bars.length; i++){				var b = bars[i] as BufferBar1;				if(i == counter){					b.scaleX = b.scaleY = 2;					b.alpha = 1;				} else {					b.scaleX -= fadeSpeed / 2;					b.scaleY -= fadeSpeed / 2;					b.alpha -= fadeSpeed;				}			}		}	}}